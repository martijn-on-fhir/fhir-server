/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/app.controller.ts":
/*!*******************************!*\
  !*** ./src/app.controller.ts ***!
  \*******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("{\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AppController = void 0;\nconst common_1 = __webpack_require__(/*! @nestjs/common */ \"@nestjs/common\");\nconst app_service_1 = __webpack_require__(/*! ./app.service */ \"./src/app.service.ts\");\nconst swagger_1 = __webpack_require__(/*! @nestjs/swagger */ \"@nestjs/swagger\");\nlet AppController = class AppController {\n    appService;\n    constructor(appService) {\n        this.appService = appService;\n    }\n    version() {\n        return 'Fhir 4.0.0';\n    }\n    healthcheck() {\n        return 'ok';\n    }\n};\nexports.AppController = AppController;\n__decorate([\n    (0, common_1.Get)(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", String)\n], AppController.prototype, \"version\", null);\n__decorate([\n    (0, common_1.Get)('readiness'),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", String)\n], AppController.prototype, \"healthcheck\", null);\nexports.AppController = AppController = __decorate([\n    (0, swagger_1.ApiTags)('Health Check'),\n    (0, common_1.Controller)(),\n    __metadata(\"design:paramtypes\", [app_service_1.AppService])\n], AppController);\n\n\n//# sourceURL=webpack://fhir-server/./src/app.controller.ts?\n}");

/***/ }),

/***/ "./src/app.module.ts":
/*!***************************!*\
  !*** ./src/app.module.ts ***!
  \***************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("{\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AppModule = void 0;\nconst common_1 = __webpack_require__(/*! @nestjs/common */ \"@nestjs/common\");\nconst app_controller_1 = __webpack_require__(/*! ./app.controller */ \"./src/app.controller.ts\");\nconst app_service_1 = __webpack_require__(/*! ./app.service */ \"./src/app.service.ts\");\nconst fhir_controller_1 = __webpack_require__(/*! ./fhir/fhir.controller */ \"./src/fhir/fhir.controller.ts\");\nconst fhir_service_1 = __webpack_require__(/*! ./services/fhir/fhir.service */ \"./src/services/fhir/fhir.service.ts\");\nconst mongoose_1 = __webpack_require__(/*! @nestjs/mongoose */ \"@nestjs/mongoose\");\nconst fhir_resource_schema_1 = __webpack_require__(/*! ./schema/fhir-resource-schema */ \"./src/schema/fhir-resource-schema.ts\");\nconst structure_definition_schema_1 = __webpack_require__(/*! ./schema/structure-definition.schema */ \"./src/schema/structure-definition.schema.ts\");\nconst validation_service_1 = __webpack_require__(/*! ./services/validation/validation.service */ \"./src/services/validation/validation.service.ts\");\nconst throttler_1 = __webpack_require__(/*! @nestjs/throttler */ \"@nestjs/throttler\");\nconst config_1 = __webpack_require__(/*! @nestjs/config */ \"@nestjs/config\");\nconst value_set_schema_1 = __webpack_require__(/*! ./schema/value-set-schema */ \"./src/schema/value-set-schema.ts\");\nconst terminology_service_1 = __webpack_require__(/*! ./services/terminology/terminology.service */ \"./src/services/terminology/terminology.service.ts\");\nconst configuration_1 = __webpack_require__(/*! ./config/configuration */ \"./src/config/configuration.ts\");\nlet AppModule = class AppModule {\n};\nexports.AppModule = AppModule;\nexports.AppModule = AppModule = __decorate([\n    (0, common_1.Module)({\n        imports: [\n            throttler_1.ThrottlerModule.forRoot({\n                throttlers: [\n                    {\n                        ttl: 60000,\n                        limit: 10,\n                    },\n                ],\n            }),\n            config_1.ConfigModule.forRoot({\n                isGlobal: true,\n                load: [configuration_1.default]\n            }),\n            mongoose_1.MongooseModule.forRoot(\"mongodb://localhost:27017/fhir-server\", {\n                maxPoolSize: 10,\n                serverSelectionTimeoutMS: 5000,\n                socketTimeoutMS: 45000,\n                bufferCommands: false,\n            }),\n            mongoose_1.MongooseModule.forFeature([\n                { name: fhir_resource_schema_1.FhirResource.name, schema: fhir_resource_schema_1.fhirResourceSchema },\n                { name: structure_definition_schema_1.StructureDefinitionSchema.name, schema: structure_definition_schema_1.structureDefinitionSchema },\n                { name: value_set_schema_1.ValueSetSchema.name, schema: value_set_schema_1.valueSetSchema },\n            ]),\n        ],\n        controllers: [app_controller_1.AppController, fhir_controller_1.FhirController],\n        providers: [app_service_1.AppService, fhir_service_1.FhirService, validation_service_1.ValidationService, terminology_service_1.TerminologyService],\n        exports: [mongoose_1.MongooseModule],\n    })\n], AppModule);\n\n\n//# sourceURL=webpack://fhir-server/./src/app.module.ts?\n}");

/***/ }),

/***/ "./src/app.service.ts":
/*!****************************!*\
  !*** ./src/app.service.ts ***!
  \****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("{\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AppService = void 0;\nconst common_1 = __webpack_require__(/*! @nestjs/common */ \"@nestjs/common\");\nlet AppService = class AppService {\n    constructor() {\n    }\n};\nexports.AppService = AppService;\nexports.AppService = AppService = __decorate([\n    (0, common_1.Injectable)(),\n    __metadata(\"design:paramtypes\", [])\n], AppService);\n\n\n//# sourceURL=webpack://fhir-server/./src/app.service.ts?\n}");

/***/ }),

/***/ "./src/config/configuration.ts":
/*!*************************************!*\
  !*** ./src/config/configuration.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst fs_1 = __webpack_require__(/*! fs */ \"fs\");\nconst path_1 = __webpack_require__(/*! path */ \"path\");\nconst common_1 = __webpack_require__(/*! @nestjs/common */ \"@nestjs/common\");\nconst process = __webpack_require__(/*! node:process */ \"node:process\");\nexports[\"default\"] = () => {\n    const env = process.env.ENV_NAME;\n    const configFilePath = (0, path_1.resolve)(__dirname, `../../config/${env}.json`);\n    if ((0, fs_1.existsSync)(configFilePath)) {\n        const config = (0, fs_1.readFileSync)(configFilePath, 'utf8').toString();\n        return JSON.parse(config);\n    }\n    else {\n        throw new common_1.HttpException(`Config file ${configFilePath} not found`, common_1.HttpStatus.NOT_FOUND, {\n            description: `Config file ${configFilePath} not found`\n        });\n    }\n};\n\n\n//# sourceURL=webpack://fhir-server/./src/config/configuration.ts?\n}");

/***/ }),

/***/ "./src/fhir/fhir.controller.ts":
/*!*************************************!*\
  !*** ./src/fhir/fhir.controller.ts ***!
  \*************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("{\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FhirController = void 0;\nconst common_1 = __webpack_require__(/*! @nestjs/common */ \"@nestjs/common\");\nconst fhir_service_1 = __webpack_require__(/*! ../services/fhir/fhir.service */ \"./src/services/fhir/fhir.service.ts\");\nconst swagger_1 = __webpack_require__(/*! @nestjs/swagger */ \"@nestjs/swagger\");\nconst validation_service_1 = __webpack_require__(/*! ../services/validation/validation.service */ \"./src/services/validation/validation.service.ts\");\nconst authorizer_guard_1 = __webpack_require__(/*! ../guards/authorizer/authorizer.guard */ \"./src/guards/authorizer/authorizer.guard.ts\");\nlet FhirController = class FhirController {\n    _service;\n    _validatiobService;\n    constructor(_service, _validatiobService) {\n        this._service = _service;\n        this._validatiobService = _validatiobService;\n    }\n    getCapabilityStatement() {\n        return this._service.getMetaData();\n    }\n    async validate(resource) {\n        return await this._validatiobService.validateResource(resource);\n    }\n    async searchResources(resourceType, searchParams) {\n        return await this._service.find(resourceType, searchParams);\n    }\n    async getResource(resourceType, id) {\n        return await this._service.findById(resourceType, id);\n    }\n    async createResource(resourceType, resource) {\n        await this._service.checkPreRequest('POST', resourceType, resource);\n        return await this._service.create(resourceType, resource);\n    }\n    async update(resourceType, id, resource) {\n        await this._service.checkPreRequest('POST', resourceType, resource, id);\n        return await this._service.update(resourceType, id, resource);\n    }\n    delete(resourceType, id) {\n        return this._service.delete(resourceType, id);\n    }\n};\nexports.FhirController = FhirController;\n__decorate([\n    (0, swagger_1.ApiOperation)({ summary: 'Get FHIR server capability statement', description: 'Returns the FHIR server metadata including supported resources and operations' }),\n    (0, common_1.Get)('metadata'),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", Object)\n], FhirController.prototype, \"getCapabilityStatement\", null);\n__decorate([\n    (0, swagger_1.ApiOperation)({ summary: 'Validate FHIR resource', description: 'Validates a FHIR resource against its structure definition' }),\n    (0, swagger_1.ApiResponse)({ status: 200, description: 'Resource validation result' }),\n    (0, common_1.Post)('$validate'),\n    __param(0, (0, common_1.Body)()),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", Promise)\n], FhirController.prototype, \"validate\", null);\n__decorate([\n    (0, swagger_1.ApiOperation)({ summary: 'Search FHIR resources', description: 'Search for FHIR resources of specific type with optional search parameters' }),\n    (0, swagger_1.ApiParam)({ name: 'resourceType', description: 'Type of FHIR resource' }),\n    (0, common_1.Get)(':resourceType'),\n    __param(0, (0, common_1.Param)('resourceType')),\n    __param(1, (0, common_1.Query)()),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, Object]),\n    __metadata(\"design:returntype\", Promise)\n], FhirController.prototype, \"searchResources\", null);\n__decorate([\n    (0, swagger_1.ApiOperation)({ summary: 'Get FHIR resource by ID', description: 'Retrieve a specific FHIR resource by its type and ID' }),\n    (0, swagger_1.ApiParam)({ name: 'resourceType', description: 'Type of FHIR resource' }),\n    (0, swagger_1.ApiParam)({ name: 'id', description: 'Resource ID' }),\n    (0, common_1.Get)(':resourceType/:id'),\n    __param(0, (0, common_1.Param)('resourceType')),\n    __param(1, (0, common_1.Param)('id')),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String]),\n    __metadata(\"design:returntype\", Promise)\n], FhirController.prototype, \"getResource\", null);\n__decorate([\n    (0, swagger_1.ApiOperation)({ summary: 'Create FHIR resource', description: 'Create a new FHIR resource' }),\n    (0, swagger_1.ApiParam)({ name: 'resourceType', description: 'Type of FHIR resource' }),\n    (0, common_1.Post)(':resourceType'),\n    __param(0, (0, common_1.Param)('resourceType')),\n    __param(1, (0, common_1.Body)()),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, Object]),\n    __metadata(\"design:returntype\", Promise)\n], FhirController.prototype, \"createResource\", null);\n__decorate([\n    (0, swagger_1.ApiOperation)({ summary: 'Update FHIR resource', description: 'Update an existing FHIR resource by its ID' }),\n    (0, swagger_1.ApiParam)({ name: 'resourceType', description: 'Type of FHIR resource' }),\n    (0, swagger_1.ApiParam)({ name: 'id', description: 'Resource ID' }),\n    (0, common_1.Put)(':resourceType/:id'),\n    __param(0, (0, common_1.Param)('resourceType')),\n    __param(1, (0, common_1.Param)('id')),\n    __param(2, (0, common_1.Body)()),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String, Object]),\n    __metadata(\"design:returntype\", Promise)\n], FhirController.prototype, \"update\", null);\n__decorate([\n    (0, swagger_1.ApiOperation)({ summary: 'Delete FHIR resource', description: 'Delete a FHIR resource by its ID' }),\n    (0, swagger_1.ApiParam)({ name: 'resourceType', description: 'Type of FHIR resource' }),\n    (0, swagger_1.ApiParam)({ name: 'id', description: 'Resource ID' }),\n    (0, common_1.Delete)(':resourceType/:id'),\n    __param(0, (0, common_1.Param)('resourceType')),\n    __param(1, (0, common_1.Param)('id')),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String]),\n    __metadata(\"design:returntype\", Promise)\n], FhirController.prototype, \"delete\", null);\nexports.FhirController = FhirController = __decorate([\n    (0, common_1.UseGuards)(authorizer_guard_1.AuthorizerGuard),\n    (0, swagger_1.ApiTags)('Fhir Server'),\n    (0, common_1.Controller)('fhir'),\n    __metadata(\"design:paramtypes\", [fhir_service_1.FhirService, validation_service_1.ValidationService])\n], FhirController);\n\n\n//# sourceURL=webpack://fhir-server/./src/fhir/fhir.controller.ts?\n}");

/***/ }),

/***/ "./src/guards/authorizer/authorizer.guard.ts":
/*!***************************************************!*\
  !*** ./src/guards/authorizer/authorizer.guard.ts ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("{\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AuthorizerGuard = void 0;\nconst common_1 = __webpack_require__(/*! @nestjs/common */ \"@nestjs/common\");\nconst config_1 = __webpack_require__(/*! @nestjs/config */ \"@nestjs/config\");\nconst jose = __webpack_require__(/*! jose */ \"jose\");\nlet AuthorizerGuard = class AuthorizerGuard {\n    _config;\n    constructor(_config) {\n        this._config = _config;\n    }\n    canActivate(context) {\n        if (this._config.get('authorization.oauth.enabled') === true) {\n            const request = context.switchToHttp().getRequest();\n            const authHeader = request.headers['authorization'];\n            if (authHeader) {\n                const decodeJwt = jose.decodeJwt(authHeader);\n                return decodeJwt ? decodeJwt.exp > Date.now() / 1000 : false;\n            }\n            else {\n                return false;\n            }\n        }\n        return true;\n    }\n};\nexports.AuthorizerGuard = AuthorizerGuard;\nexports.AuthorizerGuard = AuthorizerGuard = __decorate([\n    (0, common_1.Injectable)(),\n    __metadata(\"design:paramtypes\", [config_1.ConfigService])\n], AuthorizerGuard);\n\n\n//# sourceURL=webpack://fhir-server/./src/guards/authorizer/authorizer.guard.ts?\n}");

/***/ }),

/***/ "./src/lib/fhir-response.ts":
/*!**********************************!*\
  !*** ./src/lib/fhir-response.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FhirResponse = void 0;\nconst uuid_1 = __webpack_require__(/*! uuid */ \"uuid\");\nclass FhirResponse {\n    static format(resource) {\n        return {\n            ...resource.resource,\n            meta: resource.meta,\n        };\n    }\n    static notFound(description) {\n        return {\n            resourceType: 'OperationOutcome',\n            issue: [{\n                    severity: 'error',\n                    code: 'not-found',\n                    details: {\n                        text: `${description}`\n                    }\n                }]\n        };\n    }\n    static notAcceptatble(description) {\n        return {\n            resourceType: 'OperationOutcome',\n            issue: [{\n                    severity: 'error',\n                    code: 'not-accaptable',\n                    details: {\n                        text: `${description}`\n                    }\n                }]\n        };\n    }\n    static bundle(resources, total, resourceType, offset = 0, count = 20) {\n        return {\n            resourceType: 'Bundle',\n            id: (0, uuid_1.v4)(),\n            type: 'searchset',\n            total,\n            link: [{\n                    relation: 'self',\n                    url: `${resourceType}?_offset=${offset}&_count=${count}`,\n                },\n                ...(offset + count < total ? [{\n                        relation: 'next',\n                        url: `${resourceType}?_offset=${offset + count}&_count=${count}`,\n                    }] : []),\n                ...(offset > 0 ? [{\n                        relation: 'previous',\n                        url: `${resourceType}?_offset=${Math.max(0, offset - count)}&_count=${count}`,\n                    }] : []),\n            ],\n            entry: resources.map(resource => ({\n                fullUrl: `${resourceType}/${resource.id}`,\n                resource: FhirResponse.format(resource),\n                search: {\n                    mode: 'match',\n                },\n            })),\n        };\n    }\n}\nexports.FhirResponse = FhirResponse;\n\n\n//# sourceURL=webpack://fhir-server/./src/lib/fhir-response.ts?\n}");

/***/ }),

/***/ "./src/lib/metadata.ts":
/*!*****************************!*\
  !*** ./src/lib/metadata.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, exports) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Metadata = void 0;\nclass Metadata {\n    constructor() {\n    }\n    get(structures) {\n        const response = {\n            resourceType: 'CapabilityStatement',\n            status: 'active',\n            date: new Date().toISOString(),\n            kind: 'instance',\n            software: {\n                name: 'Martijn on Fhir Server',\n                version: '1.0.0',\n            },\n            implementation: {\n                description: 'Generic FHIR Server built with NestJS and MongoDB',\n            },\n            fhirVersion: '4.0.1',\n            format: ['json'],\n            rest: [{\n                    mode: 'server',\n                    resource: [],\n                }],\n        };\n        structures.forEach((name) => {\n            const entity = {\n                type: `${name}`, interaction: [{ code: 'read' }, { code: 'create' }, { code: 'update' }, { code: 'delete' }, { code: 'search-type' }]\n            };\n            response.rest[0].resource.push(entity);\n        });\n        return response;\n    }\n}\nexports.Metadata = Metadata;\n\n\n//# sourceURL=webpack://fhir-server/./src/lib/metadata.ts?\n}");

/***/ }),

/***/ "./src/lib/operations/create-operation.ts":
/*!************************************************!*\
  !*** ./src/lib/operations/create-operation.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CreateOperation = void 0;\nconst operation_1 = __webpack_require__(/*! ./operation */ \"./src/lib/operations/operation.ts\");\nconst uuid_1 = __webpack_require__(/*! uuid */ \"uuid\");\nconst fhir_response_1 = __webpack_require__(/*! ../fhir-response */ \"./src/lib/fhir-response.ts\");\nconst common_1 = __webpack_require__(/*! @nestjs/common */ \"@nestjs/common\");\nclass CreateOperation extends operation_1.Operation {\n    constructor(fhirResourceModel) {\n        super(fhirResourceModel);\n        this.fhirResourceModel = fhirResourceModel;\n    }\n    async execute(resourceType, resourceData) {\n        const id = typeof resourceData.id === 'string' ? resourceData.id : (0, uuid_1.v4)();\n        const exsits = await this.exists(resourceType, id);\n        if (!exsits) {\n            resourceData.id = id;\n            const fhirResource = new this.fhirResourceModel({\n                id,\n                resourceType,\n                resource: {\n                    resourceType,\n                    id,\n                    ...resourceData,\n                },\n                tags: ['tenant']\n            });\n            const saved = await fhirResource.save();\n            return fhir_response_1.FhirResponse.format(saved);\n        }\n        else {\n            throw new common_1.NotAcceptableException({\n                resourceType: 'OperationOutcome',\n                issue: [{\n                        severity: 'error',\n                        code: 'Resource already exists',\n                        details: {\n                            text: `${resourceType}/${id} already deleted`,\n                        },\n                    }],\n            });\n        }\n    }\n}\nexports.CreateOperation = CreateOperation;\n\n\n//# sourceURL=webpack://fhir-server/./src/lib/operations/create-operation.ts?\n}");

/***/ }),

/***/ "./src/lib/operations/delete-operation.ts":
/*!************************************************!*\
  !*** ./src/lib/operations/delete-operation.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DeleteOperation = void 0;\nconst common_1 = __webpack_require__(/*! @nestjs/common */ \"@nestjs/common\");\nconst operation_1 = __webpack_require__(/*! ./operation */ \"./src/lib/operations/operation.ts\");\nclass DeleteOperation extends operation_1.Operation {\n    constructor(fhirResourceModel) {\n        super(fhirResourceModel);\n        this.fhirResourceModel = fhirResourceModel;\n    }\n    async execute(resourceType, id) {\n        try {\n            const entity = await this.exists(resourceType, id);\n            if (!entity) {\n                throw new common_1.NotFoundException({\n                    resourceType: 'OperationOutcome',\n                    issue: [{\n                            severity: 'error',\n                            code: 'not-found',\n                            details: {\n                                text: `${resourceType}/${id} not found or already deleted`,\n                            },\n                        }],\n                });\n            }\n            const updatedResource = await this.updateResource(resourceType, id, entity);\n            if (!updatedResource) {\n                throw new Error('Failed to delete resource');\n            }\n            return {\n                resourceType: 'OperationOutcome',\n                issue: [{\n                        severity: 'information',\n                        code: 'deleted',\n                        details: {\n                            text: `${resourceType}/${id} has been deleted`,\n                        },\n                    }],\n            };\n        }\n        catch (error) {\n            if (error instanceof common_1.NotFoundException) {\n                throw error;\n            }\n            throw new Error(`Error deleting ${resourceType}/${id}: ${error.message}`);\n        }\n    }\n    async updateResource(resourceType, id, entity) {\n        return this.fhirResourceModel.findOneAndUpdate({ resourceType, id }, {\n            $set: {\n                status: 'inactive',\n                'resource.meta.versionId': String(parseInt(entity.meta?.versionId ?? 0) + 1),\n                'resource.meta.lastUpdated': new Date(),\n            },\n            $push: {\n                tags: 'deleted',\n            },\n        }, { new: true });\n    }\n}\nexports.DeleteOperation = DeleteOperation;\n\n\n//# sourceURL=webpack://fhir-server/./src/lib/operations/delete-operation.ts?\n}");

/***/ }),

/***/ "./src/lib/operations/operation.ts":
/*!*****************************************!*\
  !*** ./src/lib/operations/operation.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Operation = void 0;\nclass Operation {\n    fhirResourceModel;\n    constructor(fhirResourceModel) {\n        this.fhirResourceModel = fhirResourceModel;\n    }\n    async exists(resourceType, id) {\n        const exists = await this.fhirResourceModel.findOne({\n            resourceType,\n            id,\n            'resource.active': true,\n        });\n        return exists;\n    }\n}\nexports.Operation = Operation;\n\n\n//# sourceURL=webpack://fhir-server/./src/lib/operations/operation.ts?\n}");

/***/ }),

/***/ "./src/lib/operations/search-operation.ts":
/*!************************************************!*\
  !*** ./src/lib/operations/search-operation.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SearchOperation = void 0;\nconst operation_1 = __webpack_require__(/*! ./operation */ \"./src/lib/operations/operation.ts\");\nconst common_1 = __webpack_require__(/*! @nestjs/common */ \"@nestjs/common\");\nconst fhir_response_1 = __webpack_require__(/*! ../fhir-response */ \"./src/lib/fhir-response.ts\");\nconst lodash_es_1 = __webpack_require__(/*! lodash-es */ \"lodash-es\");\nclass SearchOperation extends operation_1.Operation {\n    count = 20;\n    offset = 0;\n    sort = { 'resource.meta.lastUpdated': 1 };\n    filter = {\n        resourceType: 'Patient',\n    };\n    constructor(fhirResourceModel) {\n        super(fhirResourceModel);\n        this.fhirResourceModel = fhirResourceModel;\n    }\n    async findById(resourceType, id) {\n        const resource = await this.fhirResourceModel.findOne({\n            resourceType, 'resource.id': id,\n        }).exec();\n        if (!resource) {\n            throw new common_1.NotFoundException({\n                resourceType: 'OperationOutcome',\n                issue: [{\n                        severity: 'error',\n                        code: 'not-found',\n                        details: {\n                            text: `${resourceType}/${id} not found`,\n                        },\n                    }],\n            });\n        }\n        return fhir_response_1.FhirResponse.format(resource);\n    }\n    async find(resourceType, searchParams) {\n        this.filter = {\n            resourceType,\n            resource: {},\n        };\n        this.count = searchParams._count ? parseInt(searchParams._count) : 20;\n        this.offset = searchParams._offset ? parseInt(searchParams._offset) : 0;\n        this.appendId(searchParams?._id);\n        this.appendIdentifier(searchParams?.identifier);\n        this.appendProfile(searchParams?._profile);\n        const query = this.transformToDotNotation(this.filter);\n        console.dir(query);\n        const resources = await this.fhirResourceModel\n            .find(query)\n            .skip(this.offset)\n            .limit(this.count)\n            .sort(this.sort)\n            .exec();\n        const total = await this.fhirResourceModel.countDocuments(query);\n        return fhir_response_1.FhirResponse.bundle(resources, total, resourceType, this.offset, this.count);\n    }\n    appendId(id) {\n        if (id) {\n            this.filter.resource.id = id;\n        }\n    }\n    appendIdentifier(entity) {\n        this.filter.resource.identifier = [];\n        const identifiers = [];\n        if (typeof entity === 'string') {\n            identifiers.push(entity);\n        }\n        for (const identifier of identifiers) {\n            const [system, value] = identifier.split('|');\n            const config = {\n                system,\n            };\n            if (value) {\n                Object.assign(config, {\n                    value,\n                });\n            }\n            this.filter.resource.identifier = config;\n        }\n        if (this.filter.resource.identifier.length === 0) {\n            delete this.filter.resource.identifier;\n        }\n    }\n    appendProfile(profile) {\n        if (profile) {\n            (0, lodash_es_1.set)(this.filter, 'resource.meta.profile', profile);\n        }\n    }\n    transformToDotNotation(nestedQuery, prefix = '') {\n        const transformed = {};\n        for (const key in nestedQuery) {\n            if (nestedQuery.hasOwnProperty(key)) {\n                const currentKey = prefix ? `${prefix}.${key}` : key;\n                const value = nestedQuery[key];\n                if (value !== null && typeof value === 'object' && !Array.isArray(value)) {\n                    Object.assign(transformed, this.transformToDotNotation(value, currentKey));\n                }\n                else {\n                    transformed[currentKey] = value;\n                }\n            }\n        }\n        return transformed;\n    }\n}\nexports.SearchOperation = SearchOperation;\n\n\n//# sourceURL=webpack://fhir-server/./src/lib/operations/search-operation.ts?\n}");

/***/ }),

/***/ "./src/lib/operations/update-operation.ts":
/*!************************************************!*\
  !*** ./src/lib/operations/update-operation.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UpdateOperation = void 0;\nconst operation_1 = __webpack_require__(/*! ./operation */ \"./src/lib/operations/operation.ts\");\nconst common_1 = __webpack_require__(/*! @nestjs/common */ \"@nestjs/common\");\nconst fhir_response_1 = __webpack_require__(/*! ../fhir-response */ \"./src/lib/fhir-response.ts\");\nclass UpdateOperation extends operation_1.Operation {\n    constructor(fhirResourceModel) {\n        super(fhirResourceModel);\n        this.fhirResourceModel = fhirResourceModel;\n    }\n    async execute(resourceType, id, resourceData) {\n        const entity = await this.exists(resourceType, id);\n        if (entity) {\n            if (resourceData.meta?.versionId && resourceData.meta.versionId !== entity.meta.versionId) {\n                throw new common_1.ConflictException({\n                    resourceType: 'OperationOutcome',\n                    issue: [{\n                            severity: 'error',\n                            code: 'conflict',\n                            details: {\n                                text: `Version conflict. Expected version ${entity.meta.versionId}, but received ${resourceData.meta.versionId}`,\n                            },\n                        }],\n                });\n            }\n            const newVersionId = String(parseInt(entity.meta.versionId) + 1);\n            const updatedResourceData = this.prepareResourceForUpdate(resourceType, id, resourceData);\n            const updatedResource = await this.fhirResourceModel.findOneAndUpdate({ resourceType, id }, {\n                $set: {\n                    resource: updatedResourceData,\n                    'resource.meta.versionId': newVersionId,\n                    '.resource.meta.lastUpdated': new Date(),\n                },\n            }, {\n                new: true,\n                runValidators: true,\n            });\n            if (!updatedResource) {\n                throw new Error('Failed to update resource');\n            }\n            return fhir_response_1.FhirResponse.format(updatedResource);\n        }\n        else {\n            throw new common_1.NotFoundException({\n                resourceType: 'OperationOutcome',\n                issue: [{\n                        severity: 'error',\n                        code: 'not-found',\n                        details: {\n                            text: `${resourceType}/${id} can not be updated, cos it does not exists`,\n                        }\n                    }]\n            });\n        }\n    }\n    prepareResourceForUpdate(resourceType, id, resourceData) {\n        return {\n            ...resourceData,\n            resourceType,\n            id\n        };\n    }\n}\nexports.UpdateOperation = UpdateOperation;\n\n\n//# sourceURL=webpack://fhir-server/./src/lib/operations/update-operation.ts?\n}");

/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst core_1 = __webpack_require__(/*! @nestjs/core */ \"@nestjs/core\");\nconst app_module_1 = __webpack_require__(/*! ./app.module */ \"./src/app.module.ts\");\nconst swagger_1 = __webpack_require__(/*! @nestjs/swagger */ \"@nestjs/swagger\");\nconst path_1 = __webpack_require__(/*! path */ \"path\");\nconst helmet_1 = __webpack_require__(/*! helmet */ \"helmet\");\nasync function bootstrap() {\n    const app = await core_1.NestFactory.create(app_module_1.AppModule);\n    app.use((0, helmet_1.default)());\n    app.useStaticAssets((0, path_1.join)(__dirname, \"..\", \"static\"));\n    const config = new swagger_1.DocumentBuilder()\n        .setTitle(\"Fhir Service\")\n        .setVersion(\"1.0\")\n        .setExternalDoc(\"Insomnia | Postman Collection\", \"./api-json\")\n        .setContact('Martijn on Fhir', 'https://github.com/martijn-on-fhir/fhir-server', '')\n        .addServer(\"http://localhost:3000\", \"Local Development\")\n        .build();\n    const document = swagger_1.SwaggerModule.createDocument(app, config);\n    swagger_1.SwaggerModule.setup(\"api\", app, document, {\n        customSiteTitle: \"Fhir Server API\",\n        customfavIcon: \"./favicon.png\",\n        customCssUrl: [\"/theme.css\"],\n        customJs: [\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js\", \"adapcare.js\"]\n    });\n    await app.listen(process.env.PORT ?? 3000);\n}\nbootstrap();\n\n\n//# sourceURL=webpack://fhir-server/./src/main.ts?\n}");

/***/ }),

/***/ "./src/schema/fhir-resource-schema.ts":
/*!********************************************!*\
  !*** ./src/schema/fhir-resource-schema.ts ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("{\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fhirResourceSchema = exports.FhirResource = void 0;\nconst mongoose_1 = __webpack_require__(/*! @nestjs/mongoose */ \"@nestjs/mongoose\");\nlet FhirResource = class FhirResource {\n    id;\n    resourceType;\n    resource;\n    tags;\n};\nexports.FhirResource = FhirResource;\n__decorate([\n    (0, mongoose_1.Prop)({\n        required: true,\n        unique: true,\n        index: true\n    }),\n    __metadata(\"design:type\", String)\n], FhirResource.prototype, \"id\", void 0);\n__decorate([\n    (0, mongoose_1.Prop)({ required: true, index: true }),\n    __metadata(\"design:type\", String)\n], FhirResource.prototype, \"resourceType\", void 0);\n__decorate([\n    (0, mongoose_1.Prop)({ type: Object }),\n    __metadata(\"design:type\", Object)\n], FhirResource.prototype, \"resource\", void 0);\n__decorate([\n    (0, mongoose_1.Prop)({ type: [String], default: [] }),\n    __metadata(\"design:type\", Array)\n], FhirResource.prototype, \"tags\", void 0);\nexports.FhirResource = FhirResource = __decorate([\n    (0, mongoose_1.Schema)({\n        collection: 'resources',\n        timestamps: { createdAt: true, updatedAt: false },\n        strict: false,\n        versionKey: false\n    })\n], FhirResource);\nexports.fhirResourceSchema = mongoose_1.SchemaFactory.createForClass(FhirResource);\nexports.fhirResourceSchema.index({ resourceType: 1, 'resource.id': 1, });\nexports.fhirResourceSchema.index({ 'resource.active': 1 });\nexports.fhirResourceSchema.index({ 'resource.meta.lastUpdated': 1 });\nexports.fhirResourceSchema.index({ 'resource.meta.profile': 1 });\nexports.fhirResourceSchema.index({ 'resource.identifier': 1 });\nexports.fhirResourceSchema.index({ 'tags': 1 });\n\n\n//# sourceURL=webpack://fhir-server/./src/schema/fhir-resource-schema.ts?\n}");

/***/ }),

/***/ "./src/schema/structure-definition.schema.ts":
/*!***************************************************!*\
  !*** ./src/schema/structure-definition.schema.ts ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("{\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.structureDefinitionSchema = exports.StructureDefinitionSchema = void 0;\nconst mongoose_1 = __webpack_require__(/*! @nestjs/mongoose */ \"@nestjs/mongoose\");\nlet StructureDefinitionSchema = class StructureDefinitionSchema {\n    resourceType;\n    url;\n    release;\n    definition;\n};\nexports.StructureDefinitionSchema = StructureDefinitionSchema;\n__decorate([\n    (0, mongoose_1.Prop)({ required: true, index: true }),\n    __metadata(\"design:type\", String)\n], StructureDefinitionSchema.prototype, \"resourceType\", void 0);\n__decorate([\n    (0, mongoose_1.Prop)({\n        required: true,\n        unique: true,\n        index: true\n    }),\n    __metadata(\"design:type\", String)\n], StructureDefinitionSchema.prototype, \"url\", void 0);\n__decorate([\n    (0, mongoose_1.Prop)({\n        required: true,\n        default: '4',\n        index: true\n    }),\n    __metadata(\"design:type\", Number)\n], StructureDefinitionSchema.prototype, \"release\", void 0);\n__decorate([\n    (0, mongoose_1.Prop)({ type: Object }),\n    __metadata(\"design:type\", Object)\n], StructureDefinitionSchema.prototype, \"definition\", void 0);\nexports.StructureDefinitionSchema = StructureDefinitionSchema = __decorate([\n    (0, mongoose_1.Schema)({\n        collection: 'structure-definitions',\n        timestamps: { createdAt: true, updatedAt: false },\n        strict: false,\n        versionKey: false\n    })\n], StructureDefinitionSchema);\nexports.structureDefinitionSchema = mongoose_1.SchemaFactory.createForClass(StructureDefinitionSchema);\nexports.structureDefinitionSchema.index({ resourceType: 1, url: 1, release: 1 });\n\n\n//# sourceURL=webpack://fhir-server/./src/schema/structure-definition.schema.ts?\n}");

/***/ }),

/***/ "./src/schema/value-set-schema.ts":
/*!****************************************!*\
  !*** ./src/schema/value-set-schema.ts ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("{\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.valueSetSchema = exports.ValueSetSchema = void 0;\nconst mongoose_1 = __webpack_require__(/*! @nestjs/mongoose */ \"@nestjs/mongoose\");\nlet ValueSetSchema = class ValueSetSchema {\n    url;\n    resourceType;\n    expansion;\n    value;\n};\nexports.ValueSetSchema = ValueSetSchema;\n__decorate([\n    (0, mongoose_1.Prop)({\n        required: true,\n        index: true\n    }),\n    __metadata(\"design:type\", String)\n], ValueSetSchema.prototype, \"url\", void 0);\n__decorate([\n    (0, mongoose_1.Prop)({\n        index: true,\n        required: false\n    }),\n    __metadata(\"design:type\", String)\n], ValueSetSchema.prototype, \"resourceType\", void 0);\n__decorate([\n    (0, mongoose_1.Prop)({\n        required: true,\n    }),\n    __metadata(\"design:type\", Array)\n], ValueSetSchema.prototype, \"expansion\", void 0);\n__decorate([\n    (0, mongoose_1.Prop)({\n        type: Object,\n        required: true\n    }),\n    __metadata(\"design:type\", Object)\n], ValueSetSchema.prototype, \"value\", void 0);\nexports.ValueSetSchema = ValueSetSchema = __decorate([\n    (0, mongoose_1.Schema)({\n        collection: 'values-sets',\n        timestamps: { createdAt: true, updatedAt: false },\n        strict: false,\n        versionKey: false\n    })\n], ValueSetSchema);\nexports.valueSetSchema = mongoose_1.SchemaFactory.createForClass(ValueSetSchema);\nexports.valueSetSchema.index({ url: 1, resourceType: 1 });\n\n\n//# sourceURL=webpack://fhir-server/./src/schema/value-set-schema.ts?\n}");

/***/ }),

/***/ "./src/services/fhir/fhir.service.ts":
/*!*******************************************!*\
  !*** ./src/services/fhir/fhir.service.ts ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("{\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FhirService = void 0;\nconst common_1 = __webpack_require__(/*! @nestjs/common */ \"@nestjs/common\");\nconst fhir_resource_schema_1 = __webpack_require__(/*! ../../schema/fhir-resource-schema */ \"./src/schema/fhir-resource-schema.ts\");\nconst mongoose_1 = __webpack_require__(/*! mongoose */ \"mongoose\");\nconst mongoose_2 = __webpack_require__(/*! @nestjs/mongoose */ \"@nestjs/mongoose\");\nconst fhir_response_1 = __webpack_require__(/*! ../../lib/fhir-response */ \"./src/lib/fhir-response.ts\");\nconst delete_operation_1 = __webpack_require__(/*! ../../lib/operations/delete-operation */ \"./src/lib/operations/delete-operation.ts\");\nconst create_operation_1 = __webpack_require__(/*! ../../lib/operations/create-operation */ \"./src/lib/operations/create-operation.ts\");\nconst update_operation_1 = __webpack_require__(/*! ../../lib/operations/update-operation */ \"./src/lib/operations/update-operation.ts\");\nconst search_operation_1 = __webpack_require__(/*! ../../lib/operations/search-operation */ \"./src/lib/operations/search-operation.ts\");\nconst validation_service_1 = __webpack_require__(/*! ../validation/validation.service */ \"./src/services/validation/validation.service.ts\");\nconst structure_definition_schema_1 = __webpack_require__(/*! ../../schema/structure-definition.schema */ \"./src/schema/structure-definition.schema.ts\");\nconst metadata_1 = __webpack_require__(/*! ../../lib/metadata */ \"./src/lib/metadata.ts\");\nlet FhirService = class FhirService {\n    fhirResourceModel;\n    structureDefinitonModel;\n    validationService;\n    constructor(fhirResourceModel, structureDefinitonModel, validationService) {\n        this.fhirResourceModel = fhirResourceModel;\n        this.structureDefinitonModel = structureDefinitonModel;\n        this.validationService = validationService;\n    }\n    async findById(resourceType, id) {\n        try {\n            const operation = new search_operation_1.SearchOperation(this.fhirResourceModel);\n            return await operation.findById(resourceType, id);\n        }\n        catch (error) {\n            if (error instanceof common_1.NotFoundException) {\n                throw error;\n            }\n            throw new Error(`Error retrieving ${resourceType}/${id}: ${error.message}`);\n        }\n    }\n    async find(resourceType, searchParams) {\n        try {\n            const operation = new search_operation_1.SearchOperation(this.fhirResourceModel);\n            return operation.find(resourceType, searchParams);\n        }\n        catch (error) {\n            throw new Error(`Error searching ${resourceType}: ${error.message}`);\n        }\n    }\n    async create(resourceType, resourceData) {\n        await this.validationService.validateResource(resourceData);\n        try {\n            const operation = new create_operation_1.CreateOperation(this.fhirResourceModel);\n            return operation.execute(resourceType, resourceData);\n        }\n        catch (error) {\n            if (error instanceof common_1.NotAcceptableException) {\n                return fhir_response_1.FhirResponse.notAcceptatble(error.message);\n            }\n            throw new Error(`Error creating ${resourceType}: ${error.message}`);\n        }\n    }\n    async update(resourceType, id, resourceData) {\n        await this.validationService.validateResource(resourceData);\n        try {\n            const operation = new update_operation_1.UpdateOperation(this.fhirResourceModel);\n            return operation.execute(resourceType, id, resourceData);\n        }\n        catch (error) {\n            if (error instanceof common_1.NotFoundException || error instanceof common_1.BadRequestException || error instanceof common_1.ConflictException) {\n                throw error;\n            }\n            throw new Error(`Error updating ${resourceType}/${id}: ${error.message}`);\n        }\n    }\n    async delete(resourceType, id) {\n        try {\n            const operation = new delete_operation_1.DeleteOperation(this.fhirResourceModel);\n            return operation.execute(resourceType, id);\n        }\n        catch (error) {\n            if (error instanceof common_1.NotFoundException) {\n                return fhir_response_1.FhirResponse.notFound(error.message);\n            }\n            throw new Error(`Error deleting ${resourceType}/${id}: ${error.message}`);\n        }\n    }\n    async getMetaData() {\n        const structures = await this.structureDefinitonModel.distinct('resourceType').exec();\n        return (new metadata_1.Metadata()).get(structures);\n    }\n    async checkPreRequest(method, resourceType, data, id) {\n        if (method === 'POST') {\n            if (data?.resourceType !== resourceType) {\n                throw new common_1.BadRequestException(`ResourceType (${resourceType}) in the URL does not match the ResourceType in the request body (${data.resourceType})`);\n            }\n        }\n        else if (method === 'PUT') {\n            if (!id) {\n                throw new common_1.BadRequestException('ID is required for PUT operation');\n            }\n            if (data?.id !== id) {\n                throw new common_1.BadRequestException(`ID in the URL (${id}) does not match the ID in the request body. (${data.id}`);\n            }\n            if (data?.resourceType !== resourceType) {\n                throw new common_1.BadRequestException(`ResourceType (${resourceType}) in the URL does not match the ResourceType in the request body (${data.resourceType})`);\n            }\n        }\n        else {\n            throw new common_1.BadRequestException(`Unsupported HTTP method: ${method}`);\n        }\n    }\n};\nexports.FhirService = FhirService;\nexports.FhirService = FhirService = __decorate([\n    (0, common_1.Injectable)(),\n    __param(0, (0, mongoose_2.InjectModel)(fhir_resource_schema_1.FhirResource.name)),\n    __param(1, (0, mongoose_2.InjectModel)(structure_definition_schema_1.StructureDefinitionSchema.name)),\n    __metadata(\"design:paramtypes\", [mongoose_1.Model,\n        mongoose_1.Model,\n        validation_service_1.ValidationService])\n], FhirService);\n\n\n//# sourceURL=webpack://fhir-server/./src/services/fhir/fhir.service.ts?\n}");

/***/ }),

/***/ "./src/services/terminology/terminology.service.ts":
/*!*********************************************************!*\
  !*** ./src/services/terminology/terminology.service.ts ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("{\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TerminologyService = void 0;\nconst common_1 = __webpack_require__(/*! @nestjs/common */ \"@nestjs/common\");\nconst axios_1 = __webpack_require__(/*! axios */ \"axios\");\nconst config_1 = __webpack_require__(/*! @nestjs/config */ \"@nestjs/config\");\nconst lodash_es_1 = __webpack_require__(/*! lodash-es */ \"lodash-es\");\nconst mongoose_1 = __webpack_require__(/*! @nestjs/mongoose */ \"@nestjs/mongoose\");\nconst mongoose_2 = __webpack_require__(/*! mongoose */ \"mongoose\");\nconst value_set_schema_1 = __webpack_require__(/*! ../../schema/value-set-schema */ \"./src/schema/value-set-schema.ts\");\nlet TerminologyService = class TerminologyService {\n    _config;\n    _model;\n    enabled = false;\n    baseUrl = '';\n    token;\n    constructor(_config, _model) {\n        this._config = _config;\n        this._model = _model;\n        this.baseUrl = this._config.get('terminology.baseUrl');\n        this.enabled = this._config.get('terminology.enabled');\n    }\n    async lookup(valueSet) {\n        if (valueSet.indexOf('|') !== -1) {\n            valueSet = valueSet.split('|')[0];\n        }\n        const document = await this._find(valueSet);\n        if (document) {\n            return document.toObject().expansion;\n        }\n        if (this.enabled) {\n            if (!this.token) {\n                this.token = await this._getToken();\n            }\n            const config = {\n                baseURL: this.baseUrl,\n                url: `fhir/ValueSet/$expand?url=${valueSet}`,\n                method: 'GET',\n                headers: {\n                    authorization: `Bearer ${this.token}`,\n                },\n            };\n            return await axios_1.default.request(config).then((response) => {\n                if (!document) {\n                    this._model.create({\n                        url: response.data.url,\n                        version: '1.0.0',\n                        resourceType: response.data.resourceType,\n                        expansion: response.data.expansion.contains,\n                        value: response.data,\n                    });\n                }\n                return (0, lodash_es_1.get)(response.data.expansion, 'contains', null);\n            }).catch(() => {\n                return null;\n            });\n        }\n    }\n    async _find(valueSet) {\n        return await this._model.findOne({ url: valueSet });\n    }\n    async _getToken() {\n        const config = {\n            url: this._config.get('terminology.tokenUrl'),\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            data: {\n                username: this._config.get('terminology.username'),\n                password: this._config.get('terminology.password'),\n                client_id: 'cli_client',\n                client_secret: '',\n                grant_type: 'password',\n            },\n        };\n        return await axios_1.default.request(config).then((response) => {\n            return response.data.access_token;\n        }).catch((error) => {\n            if (error.response.status === axios_1.HttpStatusCode.Unauthorized) {\n                throw new Error('Unauthorized');\n            }\n            throw new Error(error);\n        });\n    }\n};\nexports.TerminologyService = TerminologyService;\nexports.TerminologyService = TerminologyService = __decorate([\n    (0, common_1.Injectable)(),\n    __param(1, (0, mongoose_1.InjectModel)(value_set_schema_1.ValueSetSchema.name)),\n    __metadata(\"design:paramtypes\", [config_1.ConfigService, mongoose_2.Model])\n], TerminologyService);\n\n\n//# sourceURL=webpack://fhir-server/./src/services/terminology/terminology.service.ts?\n}");

/***/ }),

/***/ "./src/services/validation/validation.service.ts":
/*!*******************************************************!*\
  !*** ./src/services/validation/validation.service.ts ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("{\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ValidationService = void 0;\nconst common_1 = __webpack_require__(/*! @nestjs/common */ \"@nestjs/common\");\nconst structure_definition_schema_1 = __webpack_require__(/*! ../../schema/structure-definition.schema */ \"./src/schema/structure-definition.schema.ts\");\nconst mongoose_1 = __webpack_require__(/*! mongoose */ \"mongoose\");\nconst mongoose_2 = __webpack_require__(/*! @nestjs/mongoose */ \"@nestjs/mongoose\");\nconst fhirPath = __webpack_require__(/*! fhirpath */ \"fhirpath\");\nconst lodash_es_1 = __webpack_require__(/*! lodash-es */ \"lodash-es\");\nconst terminology_service_1 = __webpack_require__(/*! ../terminology/terminology.service */ \"./src/services/terminology/terminology.service.ts\");\nlet ValidationService = class ValidationService {\n    structureDefinitionModel;\n    _terminologyService;\n    resource;\n    resourceType;\n    structureDefinition;\n    elements = new Map();\n    slices = new Map();\n    constructor(structureDefinitionModel, _terminologyService) {\n        this.structureDefinitionModel = structureDefinitionModel;\n        this._terminologyService = _terminologyService;\n    }\n    async validateResource(resource) {\n        const errors = [];\n        const warnings = [];\n        this.resourceType = resource.resourceType;\n        this.resource = resource;\n        if (!this.resourceType) {\n            return {\n                isValid: false,\n                errors: [{\n                        path: 'resourceType',\n                        message: 'Resource should contain a resourceType property',\n                        severity: 'error',\n                        code: 'required',\n                    }],\n                warnings: [],\n            };\n        }\n        this.structureDefinition = await this.getStructureDefinition(this.resourceType, this.resource?.profile).then((response) => {\n            return response?.definition ?? null;\n        });\n        if (!this.structureDefinition) {\n            return {\n                isValid: false,\n                errors: [{\n                        path: 'resourceType',\n                        message: `No structure definition for resource type: ${this.resourceType}`,\n                        severity: 'error',\n                        code: 'unknown-resource-type',\n                    }],\n                warnings: [],\n            };\n        }\n        this.parseStructureDefinition();\n        const validationResult = await this.validate(this.resource);\n        validationResult.errors.forEach(error => {\n            console.log(`  - ${error.path}: ${error.message}`);\n        });\n        return validationResult;\n    }\n    parseStructureDefinition() {\n        this.elements.clear();\n        this.structureDefinition.snapshot.element.forEach(element => {\n            this.elements.set(element.path, element);\n            if (element.sliceName) {\n                const basePath = element.path;\n                if (!this.slices.has(basePath)) {\n                    this.slices.set(basePath, []);\n                }\n                this.slices.get(basePath).push(element);\n            }\n        });\n    }\n    async validate(resource) {\n        const errors = [];\n        const warnings = [];\n        try {\n            if (resource.resourceType !== this.structureDefinition.type) {\n                errors.push({\n                    path: 'resourceType',\n                    severity: 'error',\n                    message: `Expected resourceType '${this.structureDefinition.type}', got '${resource.resourceType}'`,\n                });\n                return { isValid: false, errors, warnings };\n            }\n            this.validateProfileDeclaration(resource, errors);\n            this.checkRootProperties(resource, errors);\n            await this.validateElement('Observation', resource, errors, warnings);\n        }\n        catch (error) {\n            errors.push({\n                path: 'root',\n                severity: 'error',\n                message: `Validation failed: ${error instanceof Error ? error.message : 'Unknown error'}`,\n            });\n        }\n        return {\n            isValid: errors.length === 0,\n            errors,\n            warnings,\n        };\n    }\n    validateProfileDeclaration(resource, errors) {\n        if (!resource.meta?.profile?.includes(this.structureDefinition.url)) {\n            errors.push({\n                path: 'meta.profile',\n                severity: 'error',\n                message: `Resource must declare conformance to profile: ${this.structureDefinition.url}`,\n            });\n        }\n    }\n    checkRootProperties(resource, errors) {\n        const rootProperties = Object.keys(resource).filter(key => !key.startsWith('_'));\n        rootProperties.forEach(property => {\n            if (!this.elements.has(`${this.resourceType}.${property}`) && property !== 'resourceType') {\n                if (property.startsWith('effective') || property.startsWith('deceased') || property.startsWith('multipleBirth')) {\n                    return;\n                }\n                errors.push({\n                    path: property,\n                    severity: 'error',\n                    message: `Unexpected property: ${property}`,\n                });\n            }\n        });\n    }\n    async getStructureDefinition(resourceType, profile) {\n        const filter = {\n            resourceType: resourceType,\n        };\n        if (profile) {\n            Object.assign(filter, {\n                url: Array.isArray(profile) ? (0, lodash_es_1.first)(profile) : profile,\n            });\n        }\n        return this.structureDefinitionModel.findOne(filter).exec();\n    }\n    async validateChildElements(path, value, errors, warnings) {\n        if (!value || typeof value !== 'object') {\n            return;\n        }\n        const childElements = Array.from(this.elements.keys())\n            .filter(elementPath => elementPath.startsWith(path + '.') &&\n            elementPath.split('.').length === path.split('.').length + 1);\n        for (const childPath of childElements) {\n            const childProperty = childPath.split('.').pop();\n            const childValue = value[childProperty];\n            if (Array.isArray(childValue)) {\n                for (const item of childValue) {\n                    await this.validateElement(childPath, item, errors, warnings);\n                }\n            }\n            else {\n                await this.validateElement(childPath, childValue, errors, warnings);\n            }\n        }\n    }\n    async validateElement(path, value, errors, warnings) {\n        const elementDef = this.elements.get(path);\n        if (!elementDef) {\n            return;\n        }\n        this.validateCardinality(path, value, elementDef, errors);\n        this.validateDataType(path, value, elementDef, errors);\n        await this.validateConstraints(path, value, elementDef, errors, warnings);\n        this.validatePatterns(path, value, elementDef, errors);\n        await this.validateChildElements(path, value, errors, warnings);\n    }\n    validateCardinality(path, value, elementDef, errors) {\n        if (value === undefined || value === null) {\n            const base = elementDef?.base;\n            const types = this.normalizeTypes(elementDef.type);\n            if (path.endsWith('value[x]') && Array.isArray(types) && base) {\n                types.forEach((type) => {\n                    const expression = path.replace('value[x]', `value${type.code}`).split('.').slice(1).join('.');\n                    const entities = fhirPath.evaluate(this.resource, expression, {});\n                    if (Array.isArray(entities) && entities.length >= 1) {\n                        value = (0, lodash_es_1.first)(entities);\n                    }\n                });\n            }\n            if (elementDef.min > 0 && !value) {\n                errors.push({\n                    path,\n                    severity: 'error',\n                    message: `Required element '${path}' is missing (min cardinality: ${elementDef.min})`,\n                });\n            }\n            return;\n        }\n        if (Array.isArray(value)) {\n            if (value.length < elementDef.min) {\n                errors.push({\n                    path,\n                    severity: 'error',\n                    message: `Element '${path}' has ${value.length} items, minimum required: ${elementDef.min}`,\n                });\n            }\n            if (elementDef.max !== '*' && value.length > parseInt(elementDef.max)) {\n                errors.push({\n                    path,\n                    severity: 'error',\n                    message: `Element '${path}' has ${value.length} items, maximum allowed: ${elementDef.max}`,\n                });\n            }\n        }\n        else if (elementDef.max !== '*' && parseInt(elementDef.max) < 1) {\n            errors.push({\n                path,\n                severity: 'error',\n                message: `Element '${path}' should not be present (max cardinality: ${elementDef.max})`,\n            });\n        }\n    }\n    validateDataType(path, value, elementDef, errors) {\n        if (!elementDef.type || value === undefined || value === null)\n            return;\n        if (path.includes('valueQuantity') && !this.isValidQuantity(value)) {\n            errors.push({\n                path,\n                severity: 'error',\n                message: 'Invalid Quantity structure',\n            });\n        }\n        if (path.includes('valueCodeableConcept') && !this.isValidCodeableConcept(value)) {\n            errors.push({\n                path,\n                severity: 'error',\n                message: 'Invalid CodeableConcept structure',\n            });\n        }\n    }\n    isValidQuantity(value) {\n        return value &&\n            typeof value === 'object' &&\n            typeof value.value === 'number' &&\n            typeof value.unit === 'string' &&\n            typeof value.system === 'string' &&\n            typeof value.code === 'string';\n    }\n    evaluateConstraint(expression, value, path) {\n        try {\n            if (expression.includes('exists()')) {\n                return value !== undefined && value !== null;\n            }\n            if (expression.includes('empty()')) {\n                const result = fhirPath.evaluate(value, expression, {\n                    base: path,\n                });\n                const isError = Array.isArray(result) ? result[0] === true : Boolean(result);\n                return isError;\n            }\n            if (expression.includes('.length()')) {\n                const match = expression.match(/\\.length\\(\\)\\s*>=\\s*(\\d+)/);\n                if (match && typeof value === 'string') {\n                    return value.length >= parseInt(match[1]);\n                }\n            }\n            return true;\n        }\n        catch {\n            return true;\n        }\n    }\n    async validateConstraints(path, value, elementDef, errors, warnings) {\n        if (!elementDef.constraint)\n            return;\n        const valueSet = elementDef.binding?.valueSet;\n        if (value && valueSet) {\n            const collection = await this._terminologyService.lookup(valueSet);\n            if (Array.isArray(collection)) {\n                const exists = collection.find((item) => {\n                    if (typeof value === 'string') {\n                        return item.code === value;\n                    }\n                    return item.code === value.coding[0].code;\n                });\n                if (!exists) {\n                    const allowed = collection.map((item) => {\n                        return item.code.toLowerCase() === item.display.toLowerCase() ? item.code : `${item.code} - ${item.display}`;\n                    }).join(', ');\n                    errors.push({ path,\n                        severity: 'error',\n                        message: `Value not allowed, possible values are: ${allowed}`\n                    });\n                }\n            }\n        }\n        for (const constraint of elementDef.constraint) {\n            try {\n                if (!value && elementDef.min === 0) {\n                    return;\n                }\n                const isValid = this.evaluateConstraint(constraint.expression, value, path);\n                if (!isValid) {\n                    const validationItem = {\n                        path,\n                        message: constraint.human,\n                        constraint: constraint.key,\n                    };\n                    if (constraint.severity === 'error') {\n                        errors.push({ ...validationItem, severity: 'error' });\n                    }\n                    else {\n                        warnings.push(validationItem);\n                    }\n                }\n            }\n            catch (error) {\n                warnings.push({\n                    path,\n                    message: `Could not evaluate constraint ${constraint.key}: ${error instanceof Error ? error.message : 'Unknown error'}`,\n                });\n            }\n        }\n    }\n    validatePatterns(path, value, elementDef, errors) {\n        if (elementDef.patternCodeableConcept && value) {\n            const isValid = this.matchesCodeableConceptPattern(value, elementDef.patternCodeableConcept);\n            if (!isValid) {\n                errors.push({\n                    path,\n                    severity: 'error',\n                    message: `Value does not match required pattern for ${path}`,\n                });\n            }\n        }\n        if (elementDef.patternQuantity && value) {\n            const isValid = this.matchesQuantityPattern(value, elementDef.patternQuantity);\n            if (!isValid) {\n                errors.push({\n                    path,\n                    severity: 'error',\n                    message: `Quantity does not match required pattern for ${path}`,\n                });\n            }\n        }\n        if (elementDef.fixedUri && value !== elementDef.fixedUri) {\n            errors.push({\n                path,\n                severity: 'error',\n                message: `Expected fixed value '${elementDef.fixedUri}', got '${value}'`,\n            });\n        }\n    }\n    isValidCodeableConcept(value) {\n        return value && typeof value === 'object' && (Array.isArray(value.coding) || typeof value.text === 'string');\n    }\n    matchesCodeableConceptPattern(value, pattern) {\n        if (!pattern.coding || !value.coding) {\n            return true;\n        }\n        return pattern.coding.every((patternCoding) => value.coding.some((valueCoding) => {\n            return valueCoding.system === patternCoding.system && valueCoding.code === patternCoding.code;\n        }));\n    }\n    matchesQuantityPattern(value, pattern) {\n        return (!pattern.system || value.system === pattern.system) &&\n            (!pattern.code || value.code === pattern.code);\n    }\n    normalizeTypes(types) {\n        if (types) {\n            return types.map(type => {\n                return {\n                    code: type.code.charAt(0).toUpperCase() + type.code.slice(1),\n                    profile: type.profile,\n                };\n            });\n        }\n        return types;\n    }\n};\nexports.ValidationService = ValidationService;\nexports.ValidationService = ValidationService = __decorate([\n    (0, common_1.Injectable)(),\n    __param(0, (0, mongoose_2.InjectModel)(structure_definition_schema_1.StructureDefinitionSchema.name)),\n    __metadata(\"design:paramtypes\", [mongoose_1.Model,\n        terminology_service_1.TerminologyService])\n], ValidationService);\n\n\n//# sourceURL=webpack://fhir-server/./src/services/validation/validation.service.ts?\n}");

/***/ }),

/***/ "@nestjs/common":
/*!*********************************!*\
  !*** external "@nestjs/common" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@nestjs/common");

/***/ }),

/***/ "@nestjs/config":
/*!*********************************!*\
  !*** external "@nestjs/config" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@nestjs/config");

/***/ }),

/***/ "@nestjs/core":
/*!*******************************!*\
  !*** external "@nestjs/core" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("@nestjs/core");

/***/ }),

/***/ "@nestjs/mongoose":
/*!***********************************!*\
  !*** external "@nestjs/mongoose" ***!
  \***********************************/
/***/ ((module) => {

module.exports = require("@nestjs/mongoose");

/***/ }),

/***/ "@nestjs/swagger":
/*!**********************************!*\
  !*** external "@nestjs/swagger" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("@nestjs/swagger");

/***/ }),

/***/ "@nestjs/throttler":
/*!************************************!*\
  !*** external "@nestjs/throttler" ***!
  \************************************/
/***/ ((module) => {

module.exports = require("@nestjs/throttler");

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

module.exports = require("axios");

/***/ }),

/***/ "fhirpath":
/*!***************************!*\
  !*** external "fhirpath" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("fhirpath");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "helmet":
/*!*************************!*\
  !*** external "helmet" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("helmet");

/***/ }),

/***/ "jose":
/*!***********************!*\
  !*** external "jose" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("jose");

/***/ }),

/***/ "lodash-es":
/*!****************************!*\
  !*** external "lodash-es" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("lodash-es");

/***/ }),

/***/ "mongoose":
/*!***************************!*\
  !*** external "mongoose" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("mongoose");

/***/ }),

/***/ "node:process":
/*!*******************************!*\
  !*** external "node:process" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("node:process");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "uuid":
/*!***********************!*\
  !*** external "uuid" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("uuid");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.ts");
/******/ 	
/******/ })()
;